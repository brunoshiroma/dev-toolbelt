plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.springframework.experimental.aot' version '0.11.3'
}

group = 'com.brunoshiroma'
version = '0.1.2-SNAPSHOT'
sourceCompatibility = '17'

//from https://gist.github.com/Trogious/fbf69afee2ff049951ac6930de7bd0da
def getAppVersion = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', '--short', 'HEAD'
		standardOutput = stdout
	}
	def commitId = stdout.toString().replace("\n", "").replace("\r", "").trim()
	stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'tag', '--points-at', commitId
		standardOutput = stdout
	}
	def tagName = stdout.toString().replace("\n", "").replace("\r", "").trim()
	def versionName = 'git-' + commitId
	if (tagName != null && "" != tagName) {
		versionName = tagName
	}
	return versionName
}


configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


	implementation 'org.springframework:spring-context-indexer'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

task buildGitHubActions{
	doLast {
		version = getAppVersion()
	}
	finalizedBy build
}

springAot {
	removeSpelSupport = true
}

compileJava{
	doFirst {
		//generate property on application.properties with timestamp, for use on spring
		def propertyFile = file "src/main/resources/application.properties"
		def props = new Properties()
		propertyFile.withReader { props.load(it) }
		props.setProperty('release', new Date().format('yyyyMMdd-HHmmss'))
		propertyFile.withWriter { props.store(it, null) }

		//update the heroku procfile with version from this file
		new File(projectDir, "Procfile").text = "web: java -jar build/libs/devtoolbelt-${version}.jar"

	}
}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true',
			'BP_NATIVE_IMAGE_BUILD_ARGUMENTS' : '--static --libc=musl']
}

bootJar {
	mainClass.set('com.brunoshiroma.devtoolbelt.DevtoolbeltApplication')
}

graalvmNative {
	binaries {
		main {
			javaLauncher = javaToolchains.launcherFor {
				languageVersion = JavaLanguageVersion.of(17)
				vendor = JvmVendorSpec.matching("GraalVM")
			}
		}
	}
}

