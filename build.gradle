plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.springframework.experimental.aot' version '0.10.3'
	id 'org.graalvm.buildtools.native' version '0.9.3'
}

group = 'com.brunoshiroma'
version = '0.1.2-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


	implementation 'org.springframework:spring-context-indexer'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

task buildGitHubActions{
	doLast {
		version = ""
	}
	finalizedBy build
}

compileJava{
	doFirst {
		//generate property on application.properties with timestamp, for use on spring
		def propertyFile = file "src/main/resources/application.properties"
		def props = new Properties()
		propertyFile.withReader { props.load(it) }
		props.setProperty('release', new Date().format('yyyyMMdd-HHmmss'))
		propertyFile.withWriter { props.store(it, null) }

		//update the heroku procfile with version from this file
		new File(projectDir, "Procfile").text = "web: java -jar build/libs/devtoolbelt-${version}.jar"

	}
}

//tasks.getByName("bootBuildImage"){
//	builder = "paketobuildpacks/builder:tiny"
//	environment = [
//			"BP_BOOT_NATIVE_IMAGE" : "1",
//			"BP_BOOT_NATIVE_IMAGE_BUILD_ARGUMENTS" : """
//				-H:+StaticExecutableWithDynamicLibC
//                -Dspring.native.remove-yaml-support=true
//                -H:IncludeResources='templates/.*'
//                -H:IncludeResources='static/.*'
//                -H:IncludeResources='application.*properties\$'
//                -H:Log=registerResource:verbose
//            """.trim()
//	]
//}
//
//
//bootBuildImage {
//	builder = 'paketobuildpacks/builder:tiny'
//	environment = ['BP_NATIVE_IMAGE': 'true']
//}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}

nativeBuild {
	classpath processAotResources.outputs, compileAotJava.outputs
}

nativeTest {
	classpath processAotTestResources.outputs, compileAotTestJava.outputs
}